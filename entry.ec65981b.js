const c="astro:hydrate";function m(i,u=20){let l=0;return(...o)=>{clearTimeout(l),l=setTimeout(()=>i(...o),u)}}const d=m(()=>{document.querySelector("astro-root[ssr]")&&window.dispatchEvent(new CustomEvent(c))}),w=i=>window.addEventListener(c,i,{once:!0});window[c]||("MutationObserver"in window&&new MutationObserver(d).observe(document.body,{subtree:!0,childList:!0}),window[c]=!0);async function v(i,u,l){let n,o=null,a;async function f(){w(f);const r=document.querySelectorAll(`astro-root[ssr][uid="${i}"]`),b=async()=>{var t;if(r.length!==0){if(typeof o!="string"){let e=r[0].querySelector("astro-fragment");if(e==null&&r[0].hasAttribute("tmpl")){let s=r[0].querySelector("template[data-astro-template]");s&&(o=s.innerHTML,s.remove())}else e&&(o=e.innerHTML)}a||(a=await l());for(const e of r)(t=e.parentElement)!=null&&t.closest("astro-root[ssr]")||(await a(e,o),e.removeAttribute("ssr"));d()}};n&&n.disconnect(),n=new IntersectionObserver(t=>{for(const e of t)if(!!e.isIntersecting){n.disconnect(),b();break}});for(const t of r)for(let e=0;e<t.children.length;e++){const s=t.children[e];n.observe(s)}}f()}export{v as default};
